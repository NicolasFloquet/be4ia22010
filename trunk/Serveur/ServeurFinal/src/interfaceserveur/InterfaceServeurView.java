/*
 * InterfaceServeurView.java
 */

package interfaceserveur;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class InterfaceServeurView extends FrameView {

    public InterfaceServeurView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = InterfaceServeurApp.getApplication().getMainFrame();
            aboutBox = new InterfaceServeurAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        InterfaceServeurApp.getApplication().show(aboutBox);
    }
    @Action
    public void montrerFenetreEmployes() {
        if (fenetreListeEmployes == null) {
            JFrame mainFrame = InterfaceServeurApp.getApplication().getMainFrame();
            fenetreListeEmployes = new InterfaceEmployer(mainFrame);
            fenetreListeEmployes.setLocationRelativeTo(mainFrame);
        }
        InterfaceServeurApp.getApplication().show(fenetreListeEmployes);
    }

    @Action
    public void montrerFenetreNouvelleMission() {
        if (fenetreAjouterNouvelleMission == null) {
            JFrame mainFrame = InterfaceServeurApp.getApplication().getMainFrame();
            fenetreAjouterNouvelleMission = new InterfaceNouvelleMission(mainFrame);
            fenetreAjouterNouvelleMission.setLocationRelativeTo(mainFrame);
        }
        InterfaceServeurApp.getApplication().show(fenetreAjouterNouvelleMission);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        PanneauListeMission = new javax.swing.JScrollPane();
        ListeMissions = new javax.swing.JList();
        DescriptionPanneauListeMission = new javax.swing.JLabel();
        ChoixAffichagePanneauListeMission = new javax.swing.JComboBox();
        BoutonAffecter = new javax.swing.JToggleButton();
        Separateurdescriptionmission = new javax.swing.JSeparator();
        BoutonAjouterMission = new javax.swing.JToggleButton();
        javax.swing.JLabel LabelDescriptionMission = new javax.swing.JLabel();
        barreMenu = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        PanneauListeMission.setName("PanneauListeMission"); // NOI18N

        ListeMissions.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Mission 1", "Mission 2", "Mission 3", "Mission 4", "Mission 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        ListeMissions.setName("ListeMissions"); // NOI18N
        PanneauListeMission.setViewportView(ListeMissions);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(interfaceserveur.InterfaceServeurApp.class).getContext().getResourceMap(InterfaceServeurView.class);
        DescriptionPanneauListeMission.setText(resourceMap.getString("DescriptionPanneauListeMission.text")); // NOI18N
        DescriptionPanneauListeMission.setName("DescriptionPanneauListeMission"); // NOI18N

        ChoixAffichagePanneauListeMission.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Toutes", "En attente", "En cours", "Termin√©es" }));
        ChoixAffichagePanneauListeMission.setName("ChoixAffichagePanneauListeMission"); // NOI18N
        ChoixAffichagePanneauListeMission.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ChoixAffichagePanneauListeMissionItemStateChanged(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(interfaceserveur.InterfaceServeurApp.class).getContext().getActionMap(InterfaceServeurView.class, this);
        BoutonAffecter.setAction(actionMap.get("montrerFenetreEmployes")); // NOI18N
        BoutonAffecter.setText(resourceMap.getString("BoutonAffecter.text")); // NOI18N
        BoutonAffecter.setName("BoutonAffecter"); // NOI18N
        BoutonAffecter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BoutonAffecterStateChanged(evt);
            }
        });
        BoutonAffecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonAffecterActionPerformed(evt);
            }
        });

        Separateurdescriptionmission.setName("Separateurdescriptionmission"); // NOI18N

        BoutonAjouterMission.setAction(actionMap.get("montrerFenetreNouvelleMission")); // NOI18N
        BoutonAjouterMission.setText(resourceMap.getString("BoutonAjouterMission.text")); // NOI18N
        BoutonAjouterMission.setName("BoutonAjouterMission"); // NOI18N
        BoutonAjouterMission.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BoutonAjouterMissionStateChanged(evt);
            }
        });
        BoutonAjouterMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonAjouterMissionActionPerformed(evt);
            }
        });

        LabelDescriptionMission.setFont(LabelDescriptionMission.getFont().deriveFont(LabelDescriptionMission.getFont().getStyle() | java.awt.Font.BOLD, LabelDescriptionMission.getFont().getSize()+4));
        LabelDescriptionMission.setText(resourceMap.getString("LabelDescriptionMission.text")); // NOI18N
        LabelDescriptionMission.setName("LabelDescriptionMission"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Separateurdescriptionmission, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                            .addComponent(BoutonAffecter, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(LabelDescriptionMission)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PanneauListeMission, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(DescriptionPanneauListeMission)
                        .addGap(18, 18, 18)
                        .addComponent(ChoixAffichagePanneauListeMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BoutonAjouterMission, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ChoixAffichagePanneauListeMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DescriptionPanneauListeMission)
                        .addComponent(LabelDescriptionMission)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(Separateurdescriptionmission, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                        .addComponent(BoutonAffecter, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PanneauListeMission, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BoutonAjouterMission)
                .addGap(19, 19, 19))
        );

        barreMenu.setName("barreMenu"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        barreMenu.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        barreMenu.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(barreMenu);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void ChoixAffichagePanneauListeMissionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ChoixAffichagePanneauListeMissionItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ChoixAffichagePanneauListeMissionItemStateChanged

    private void BoutonAjouterMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonAjouterMissionActionPerformed

    }//GEN-LAST:event_BoutonAjouterMissionActionPerformed

    private void BoutonAffecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonAffecterActionPerformed

    }//GEN-LAST:event_BoutonAffecterActionPerformed

    private void BoutonAffecterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BoutonAffecterStateChanged
        // TODO add your handling code here:
        BoutonAffecter.setSelected(false);
    }//GEN-LAST:event_BoutonAffecterStateChanged

    private void BoutonAjouterMissionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BoutonAjouterMissionStateChanged
        // TODO add your handling code here:
        BoutonAjouterMission.setSelected(false);
    }//GEN-LAST:event_BoutonAjouterMissionStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BoutonAffecter;
    private javax.swing.JToggleButton BoutonAjouterMission;
    private javax.swing.JComboBox ChoixAffichagePanneauListeMission;
    private javax.swing.JLabel DescriptionPanneauListeMission;
    private javax.swing.JList ListeMissions;
    private javax.swing.JScrollPane PanneauListeMission;
    private javax.swing.JSeparator Separateurdescriptionmission;
    private javax.swing.JMenuBar barreMenu;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
    private JDialog fenetreListeEmployes;
    private JDialog fenetreAjouterNouvelleMission;
}
