/*
 * InterfaceServeurAboutBox.java
 */
package interfaceserveur;

import Synthese.son.LecteurTexte;
import gestionbdd.*;
import java.awt.event.KeyEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import org.jdesktop.application.Action;

public class InterfaceNouvelleMission extends javax.swing.JDialog implements InterfaceBDD {

    private DefaultListModel listeMissionModel;
    private javax.swing.JList listeMissions;
    private DefaultComboBoxModel comboListeOrdreModel;
    private DefaultComboBoxModel comboListeOrdreModel2;
    private DefaultComboBoxModel comboListeOrdreModel3;
    private DefaultComboBoxModel comboListeOrdreModel4;
    private DefaultListModel listeOrdreInterface;
    private int pagedereponse = 0;
    private int blocage = 0;
    private LecteurTexte testVocal;
    private DAOMission accesMission;

    public InterfaceNouvelleMission(java.awt.Frame parent, javax.swing.JList liste, DAOMission acces_mission) {
        super(parent);
        this.accesMission = acces_mission;
        comboListeOrdreModel = new DefaultComboBoxModel();
        comboListeOrdreModel2 = new DefaultComboBoxModel();
        comboListeOrdreModel3 = new DefaultComboBoxModel();
        comboListeOrdreModel4 = new DefaultComboBoxModel();
        testVocal = new LecteurTexte("aucun texte");

        listeOrdreInterface = new DefaultListModel();
        initComponents();
        listeMissions = liste;
        listeMissionModel = (DefaultListModel) listeMissions.getModel();
        //listeMissionModel.copyInto(anArray)

        getRootPane().setDefaultButton(BoutonTestVocal);
    }

    /*  final String partsList[][] = { { "Item 1", "10", "99c" },
    { "Item 2", "12", "$18.99" }, { "Item 3", "1", "$10.00" } };

    }
    class PartsListModel extends DefaultListModel implements ComboBoxModel {

    Object currentValue;

    public PartsListModel() {
    for (int i = 0, n = partsList.length; i < n; i++) {
    addElement(partsList[i]);
    }
    }

    // ComboBoxModel methods
    public Object getSelectedItem() {
    return currentValue;
    }

    public void setSelectedItem(Object anObject) {
    currentValue = anObject;
    fireContentsChanged(this, -1, -1);
    }
     */
    @Action
    public void FermerFenetre() {
        dispose();
    }

    private void clignoterMessage(final javax.swing.JLabel message) {
        message.setVisible(false);
        new Thread() {

            @Override
            public void run() {
                try {
                    Thread.sleep(100);
                } catch (Exception e) {
                }
                message.setVisible(rootPaneCheckingEnabled);
            }
        }.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BoutonTestVocal = new javax.swing.JButton();
        javax.swing.JLabel LabelDescriptionAjouterNouvelleMission = new javax.swing.JLabel();
        BoutonValiderMission = new javax.swing.JButton();
        champNomNouvelleMission = new javax.swing.JTextField();
        labelNomNouvelleMission = new javax.swing.JLabel();
        messageEntrerNomMission = new javax.swing.JLabel();
        boutonAfficherMissionComplete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListeOrdres = new javax.swing.JList();
        champTexteOrdre = new javax.swing.JTextField();
        comboListeOrdreSuivant = new javax.swing.JComboBox(comboListeOrdreModel);
        champReponse = new javax.swing.JTextField();
        boutonAjouterNouvelOrdre = new javax.swing.JButton();
        labelListeOrdres = new javax.swing.JLabel();
        boutonRetirerOrdre = new javax.swing.JButton();
        labelTexteOrdre = new javax.swing.JLabel();
        champReponse2 = new javax.swing.JTextField();
        comboListeOrdreSuivant2 = new javax.swing.JComboBox(comboListeOrdreModel2);
        comboListeOrdreSuivant3 = new javax.swing.JComboBox(comboListeOrdreModel3);
        champReponse3 = new javax.swing.JTextField();
        comboListeOrdreSuivant4 = new javax.swing.JComboBox(comboListeOrdreModel4);
        champReponse4 = new javax.swing.JTextField();
        boutonReponsesSuivante = new javax.swing.JButton();
        boutonReponsesPrecedente = new javax.swing.JButton();
        labelNumeroPage = new javax.swing.JLabel();
        labelReponse = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(InterfaceNouvelleMission.class);
        setTitle(resourceMap.getString("title")); // NOI18N
        setModal(true);
        setName("Ajouter une nouvelle mission"); // NOI18N

        BoutonTestVocal.setText(resourceMap.getString("BoutonTestVocal.text")); // NOI18N
        BoutonTestVocal.setName("BoutonTestVocal"); // NOI18N
        BoutonTestVocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonTestVocalActionPerformed(evt);
            }
        });

        LabelDescriptionAjouterNouvelleMission.setFont(LabelDescriptionAjouterNouvelleMission.getFont().deriveFont(LabelDescriptionAjouterNouvelleMission.getFont().getStyle() | java.awt.Font.BOLD, LabelDescriptionAjouterNouvelleMission.getFont().getSize()+4));
        LabelDescriptionAjouterNouvelleMission.setText(resourceMap.getString("LabelDescriptionAjouterNouvelleMission.text")); // NOI18N
        LabelDescriptionAjouterNouvelleMission.setName("LabelDescriptionAjouterNouvelleMission"); // NOI18N

        BoutonValiderMission.setText(resourceMap.getString("BoutonValiderMission.text")); // NOI18N
        BoutonValiderMission.setName("BoutonValiderMission"); // NOI18N
        BoutonValiderMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonValiderMissionActionPerformed(evt);
            }
        });

        champNomNouvelleMission.setText(resourceMap.getString("champNomNouvelleMission.text")); // NOI18N
        champNomNouvelleMission.setName("champNomNouvelleMission"); // NOI18N
        champNomNouvelleMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champNomNouvelleMissionActionPerformed(evt);
            }
        });
        champNomNouvelleMission.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                champNomNouvelleMissionKeyPressed(evt);
            }
        });

        labelNomNouvelleMission.setText(resourceMap.getString("labelNomNouvelleMission.text")); // NOI18N
        labelNomNouvelleMission.setName("labelNomNouvelleMission"); // NOI18N

        messageEntrerNomMission.setFont(resourceMap.getFont("messageEntrerNomMission.font")); // NOI18N
        messageEntrerNomMission.setText(resourceMap.getString("messageEntrerNomMission.text")); // NOI18N
        messageEntrerNomMission.setName("messageEntrerNomMission"); // NOI18N
        messageEntrerNomMission.setVisible(false);

        boutonAfficherMissionComplete.setText(resourceMap.getString("boutonAfficherMissionComplete.text")); // NOI18N
        boutonAfficherMissionComplete.setName("boutonAfficherMissionComplete"); // NOI18N
        boutonAfficherMissionComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAfficherMissionCompleteActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        DefaultListModel listeOrdresModel = new DefaultListModel();
        ListeOrdres.setModel(listeOrdresModel);
        ListeOrdres.setName("ListeOrdres"); // NOI18N
        ListeOrdres.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListeOrdresValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListeOrdres);

        champTexteOrdre.setText(resourceMap.getString("champTexteOrdre.text")); // NOI18N
        champTexteOrdre.setEnabled(false);
        champTexteOrdre.setName("champTexteOrdre"); // NOI18N
        champTexteOrdre.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                champTexteOrdreCaretUpdate(evt);
            }
        });
        champTexteOrdre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champTexteOrdreActionPerformed(evt);
            }
        });

        comboListeOrdreSuivant.setEnabled(false);
        comboListeOrdreSuivant.setName("comboListeOrdreSuivant"); // NOI18N
        comboListeOrdreSuivant.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboListeOrdreSuivantItemStateChanged(evt);
            }
        });
        comboListeOrdreSuivant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboListeOrdreSuivantActionPerformed(evt);
            }
        });

        champReponse.setText(resourceMap.getString("champReponse.text")); // NOI18N
        champReponse.setEnabled(false);
        champReponse.setName("champReponse"); // NOI18N
        champReponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champReponseActionPerformed(evt);
            }
        });

        boutonAjouterNouvelOrdre.setText(resourceMap.getString("boutonAjouterNouvelOrdre.text")); // NOI18N
        boutonAjouterNouvelOrdre.setName("boutonAjouterNouvelOrdre"); // NOI18N
        boutonAjouterNouvelOrdre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAjouterNouvelOrdreActionPerformed(evt);
            }
        });

        labelListeOrdres.setText(resourceMap.getString("labelListeOrdres.text")); // NOI18N
        labelListeOrdres.setName("labelListeOrdres"); // NOI18N

        boutonRetirerOrdre.setText(resourceMap.getString("boutonRetirerOrdre.text")); // NOI18N
        boutonRetirerOrdre.setName("boutonRetirerOrdre"); // NOI18N
        boutonRetirerOrdre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonRetirerOrdreActionPerformed(evt);
            }
        });

        labelTexteOrdre.setText(resourceMap.getString("labelTexteOrdre.text")); // NOI18N
        labelTexteOrdre.setName("labelTexteOrdre"); // NOI18N

        champReponse2.setText(resourceMap.getString("champReponse2.text")); // NOI18N
        champReponse2.setEnabled(false);
        champReponse2.setName("champReponse2"); // NOI18N
        champReponse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champReponse2ActionPerformed(evt);
            }
        });

        comboListeOrdreSuivant2.setEnabled(false);
        comboListeOrdreSuivant2.setName("comboListeOrdreSuivant2"); // NOI18N
        comboListeOrdreSuivant2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboListeOrdreSuivant2ItemStateChanged(evt);
            }
        });

        comboListeOrdreSuivant3.setEnabled(false);
        comboListeOrdreSuivant3.setName("comboListeOrdreSuivant3"); // NOI18N
        comboListeOrdreSuivant3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboListeOrdreSuivant3ItemStateChanged(evt);
            }
        });

        champReponse3.setText(resourceMap.getString("champReponse3.text")); // NOI18N
        champReponse3.setEnabled(false);
        champReponse3.setName("champReponse3"); // NOI18N
        champReponse3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champReponse3ActionPerformed(evt);
            }
        });

        comboListeOrdreSuivant4.setEnabled(false);
        comboListeOrdreSuivant4.setName("comboListeOrdreSuivant4"); // NOI18N
        comboListeOrdreSuivant4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboListeOrdreSuivant4ItemStateChanged(evt);
            }
        });

        champReponse4.setText(resourceMap.getString("champReponse4.text")); // NOI18N
        champReponse4.setEnabled(false);
        champReponse4.setName("champReponse4"); // NOI18N
        champReponse4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champReponse4ActionPerformed(evt);
            }
        });

        boutonReponsesSuivante.setText(resourceMap.getString("boutonReponsesSuivante.text")); // NOI18N
        boutonReponsesSuivante.setName("boutonReponsesSuivante"); // NOI18N
        boutonReponsesSuivante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonReponsesSuivanteActionPerformed(evt);
            }
        });

        boutonReponsesPrecedente.setText(resourceMap.getString("boutonReponsesPrecedente.text")); // NOI18N
        boutonReponsesPrecedente.setName("boutonReponsesPrecedente"); // NOI18N
        boutonReponsesPrecedente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonReponsesPrecedenteActionPerformed(evt);
            }
        });

        labelNumeroPage.setText(resourceMap.getString("labelNumeroPage.text")); // NOI18N
        labelNumeroPage.setName("labelNumeroPage"); // NOI18N

        labelReponse.setText(resourceMap.getString("labelReponse.text")); // NOI18N
        labelReponse.setName("labelReponse"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelNomNouvelleMission, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(champNomNouvelleMission, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BoutonValiderMission))
                            .addComponent(messageEntrerNomMission, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(labelListeOrdres)
                                    .addComponent(boutonAjouterNouvelOrdre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(boutonAfficherMissionComplete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(boutonRetirerOrdre, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(champReponse, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboListeOrdreSuivant, 0, 136, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(champReponse2, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboListeOrdreSuivant2, 0, 136, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(champReponse3, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboListeOrdreSuivant3, 0, 136, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(champReponse4, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboListeOrdreSuivant4, 0, 136, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelNumeroPage))
                                    .addComponent(labelTexteOrdre)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(BoutonTestVocal)
                                            .addComponent(labelReponse))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                                        .addComponent(boutonReponsesPrecedente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boutonReponsesSuivante))
                                    .addComponent(champTexteOrdre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)))
                            .addComponent(LabelDescriptionAjouterNouvelleMission))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelDescriptionAjouterNouvelleMission)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelListeOrdres)
                    .addComponent(labelTexteOrdre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boutonAjouterNouvelOrdre, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boutonRetirerOrdre))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(champTexteOrdre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BoutonTestVocal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelReponse))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(boutonReponsesSuivante)
                                .addComponent(boutonReponsesPrecedente)))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(champReponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboListeOrdreSuivant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(champReponse2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboListeOrdreSuivant2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(champReponse3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboListeOrdreSuivant3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(champReponse4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboListeOrdreSuivant4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelNumeroPage)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BoutonValiderMission)
                    .addComponent(champNomNouvelleMission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNomNouvelleMission)
                    .addComponent(boutonAfficherMissionComplete))
                .addGap(11, 11, 11)
                .addComponent(messageEntrerNomMission)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void champReponsesEtOrdreSuivantSetEnable (boolean valeur) {
        champReponse.setEnabled(valeur);
        champReponse2.setEnabled(valeur);
        champReponse3.setEnabled(valeur);
        champReponse4.setEnabled(valeur);
        comboListeOrdreSuivant.setEnabled(valeur);
        comboListeOrdreSuivant2.setEnabled(valeur);
        comboListeOrdreSuivant3.setEnabled(valeur);
        comboListeOrdreSuivant4.setEnabled(valeur);
    }

    private void BoutonValiderMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonValiderMissionActionPerformed
        boolean missionExistante = false;
        // TODO add your handling code here:
        if (champNomNouvelleMission.getText().isEmpty()) {
            messageEntrerNomMission.setText("Veuillez entrer un nom de mission!");
            //pour faire apparaitre ou clignoter le message d'erreur
            clignoterMessage(messageEntrerNomMission);
        } else {
            // condition si la mission existe déjà
            for (int i = 0; i < listeMissionModel.getSize(); i++) {
                if (listeMissionModel.getElementAt(i).equals(champNomNouvelleMission.getText())) {
                    missionExistante = true;
                }
            }
            if (missionExistante == true) //si l'employé est déjà dans la liste, on le l'ajoute pas.
            {
                clignoterMessage(messageEntrerNomMission);
                messageEntrerNomMission.setText("Nom déjà existant!");
                messageEntrerNomMission.setVisible(true);
            } else //ajout de la mission
            {
                messageEntrerNomMission.setVisible(false); // on enlève le message d'erreur au cas où il serait affiché.
                listeMissionModel.addElement(champNomNouvelleMission.getText());


                // A FAIRE ajout dans la base de données

                Mission m1 = new Mission();
                m1.setNom(champNomNouvelleMission.getText());
                for (int i=0; i < listeOrdreInterface.getSize();i++)
                {
                    OrdreInterface InterfaceOrdreAux = (OrdreInterface) listeOrdreInterface.getElementAt(i);
                    Ordre aux = new Ordre(i,m1.getIdMission(),InterfaceOrdreAux.getTexte(),false);
                    //while (InterfaceOrdreAux.getReponse()[indexReponse].)
                   
                }

                 //  public Reponse(int idReponse, String reponse, int ordreActuel, int ordreSuivant);
                OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());

                 /*
                    m1.addOrdre(aux);
                    public Ordre(int idOrdre, int idMission, String contenu, boolean dernierOrdre);


                m1.addOrdre(null)

                accesMission.create(m1);

                }
                */


                //Vidage des champs
                champNomNouvelleMission.setText(null);
                //A Faire : autre champs à vider.

                FermerFenetre();
            }


        }

    }//GEN-LAST:event_BoutonValiderMissionActionPerformed

    private void champNomNouvelleMissionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_champNomNouvelleMissionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BoutonValiderMissionActionPerformed(null);
        }
    }//GEN-LAST:event_champNomNouvelleMissionKeyPressed

    private void champNomNouvelleMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champNomNouvelleMissionActionPerformed
    }//GEN-LAST:event_champNomNouvelleMissionActionPerformed

    private void ajouterElementComboModel (String Nom) {

            comboListeOrdreModel.addElement(Nom);
            comboListeOrdreModel2.addElement(Nom);
            comboListeOrdreModel3.addElement(Nom);
            comboListeOrdreModel4.addElement(Nom);

    }
    private void RetirerToutElementComboModel () {

            comboListeOrdreModel.removeAllElements();
            comboListeOrdreModel2.removeAllElements();
            comboListeOrdreModel3.removeAllElements();
            comboListeOrdreModel4.removeAllElements();

    }
    private void boutonAjouterNouvelOrdreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAjouterNouvelOrdreActionPerformed
        // TODO add your handling code here:
        OrdreInterface NouvelOrdre = new OrdreInterface("Ordre " + (1 + ((DefaultListModel) ListeOrdres.getModel()).getSize()));
        ((DefaultListModel) ListeOrdres.getModel()).addElement(NouvelOrdre.getNom());  //ajout dans la liste affiché (Jlist)
        ajouterElementComboModel(NouvelOrdre.getNom()); //ajout dans la liste des ordres a attteindre selon les réponses (Jcombosbox)
        listeOrdreInterface.addElement(NouvelOrdre); //ajout dans la liste manipulé (l'ordre est ajouté dans une liste d'ordre)

        //comboListeOrdreSuivant.getModel().addListDataListener(listeMissions);
    }//GEN-LAST:event_boutonAjouterNouvelOrdreActionPerformed

    private void renommerLesNomsDesOrdres(DefaultListModel liste) {
        OrdreInterface ordre;
        ((DefaultListModel) ListeOrdres.getModel()).removeAllElements(); //vide la liste affiché (Jlist)
        RetirerToutElementComboModel(); //vide la liste affiché (Jcombosbox)

        //renomme les noms dans la liste réelle (non affiché)
        for (int index = 0; index < listeOrdreInterface.getSize(); index++) {
            ordre = (OrdreInterface) listeOrdreInterface.getElementAt(index);
            ordre.setNom("Ordre " + (index + 1));
            liste.addElement("Ordre " + (index + 1)); //refaire une liste affiché avec les ordres et les bons numéros.
            ajouterElementComboModel("Ordre " + (index + 1));
        }
    }
    private void boutonRetirerOrdreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonRetirerOrdreActionPerformed
        // TODO add your handling code here:

        //On retire l'ordre sélectionné de la liste,
        //si la liste est vide (exception), on ne fait rien


        try {
            //On vérifie si l'ordre n'est pas contenu dans les réponses possibles
            /*OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());
            for (int l=0;llisteOrdreInterface.getSize())
            {

            }*/

            listeOrdreInterface.removeElementAt(ListeOrdres.getSelectedIndex()); //retrait dans la liste réellement manipulé    
            renommerLesNomsDesOrdres(((DefaultListModel) ListeOrdres.getModel())); //refait une nouvelle liste affiché(jlist et jcombobox) et renomme les noms des missions selon leur position
        } catch (Exception e) {
        }
    }//GEN-LAST:event_boutonRetirerOrdreActionPerformed

    private void comboListesOrdreSuivantInitSelect() {
        comboListeOrdreSuivant.setSelectedIndex(0);
        comboListeOrdreSuivant2.setSelectedIndex(0);
        comboListeOrdreSuivant3.setSelectedIndex(0);
        comboListeOrdreSuivant4.setSelectedIndex(0);

    }
    private void ListeOrdresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListeOrdresValueChanged
        // TODO add your handling code here:
        blocage = 1;
        pagedereponse = 0;
        labelNumeroPage.setText("Page " + (pagedereponse + 1) + "/10");
        champTexteOrdre.setEnabled(false);
        champReponsesEtOrdreSuivantSetEnable (false);
        comboListesOrdreSuivantInitSelect();
        champReponse.setText(null);
        champReponse2.setText(null);
        champReponse3.setText(null);
        champReponse4.setText(null);
        try {
            OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());
            champTexteOrdre.setText(ordre.getTexte());
            champReponse.setText(ordre.getReponse()[0]);
            champReponse2.setText(ordre.getReponse()[1]);
            champReponse3.setText(ordre.getReponse()[2]);
            champReponse4.setText(ordre.getReponse()[3]);
            champTexteOrdre.setEnabled(rootPaneCheckingEnabled);
            champReponse.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant.setSelectedItem(ordre.getOrdreSuivant()[0].getNom());
            champReponse2.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant2.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant2.setSelectedItem(ordre.getOrdreSuivant()[1].getNom());
            champReponse3.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant3.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant3.setSelectedItem(ordre.getOrdreSuivant()[2].getNom());
            champReponse4.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant4.setEnabled(rootPaneCheckingEnabled);
            comboListeOrdreSuivant4.setSelectedItem(ordre.getOrdreSuivant()[3].getNom());
        } catch (Exception e) {
            //e.printStackTrace();
        }
        blocage = 0;

    }//GEN-LAST:event_ListeOrdresValueChanged

    private void boutonAfficherMissionCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAfficherMissionCompleteActionPerformed
        // TODO add your handling code here:

        /*  JTextField champReponsecffh = new javax.swing.JTextField();
        champReponsecffh.setText("champReponsecffh.text"); // NOI18N
        champReponsecffh.setEnabled(false);
        champReponsecffh.setName("champReponsecffh"); // NOI18N
        JComboBox comboListeOrdreSuivant2 = new javax.swing.JComboBox(comboListeOrdreModel);
        Point locationChamp = champReponse.getLocation();
        Point locationCombo = comboListeOrdreSuivant.getLocation();
        champReponsecffh.setLocation(locationChamp.x,locationChamp.y+20);
        comboListeOrdreSuivant2.setLocation(locationCombo.x,locationCombo.y+40);
        getContentPane().add(champReponsecffh);
        getContentPane().add(comboListeOrdreSuivant2);

        getContentPane().validate();
        pack();*/
    }//GEN-LAST:event_boutonAfficherMissionCompleteActionPerformed

    private void champTexteOrdreCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_champTexteOrdreCaretUpdate
        // TODO add your handling code here:
        try {
            OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());
            ordre.setTexte(champTexteOrdre.getText());
        } catch (Exception e) {
        }

    }//GEN-LAST:event_champTexteOrdreCaretUpdate

    private void champTexteOrdreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champTexteOrdreActionPerformed
        // TODO add your handling code here:

        OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());
        ordre.setTexte(champTexteOrdre.getText());

    }//GEN-LAST:event_champTexteOrdreActionPerformed

    private void actionChampReponse(JTextField champReponseActuel, int numeroReponse) {
        OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());
        champReponse.getText();
        String[] lesReponses = ordre.getReponse();
        lesReponses[numeroReponse + 4 * pagedereponse] = champReponseActuel.getText();

        if (numeroReponse % 4 == 0) {
            champReponse2.setEnabled(true);
            comboListeOrdreSuivant2.setEnabled(true);
        }
        if (numeroReponse % 4 == 1) {
            champReponse3.setEnabled(true);
            comboListeOrdreSuivant3.setEnabled(true);
        }
        if (numeroReponse % 4 == 2) {
            champReponse4.setEnabled(true);
            comboListeOrdreSuivant4.setEnabled(true);
        }

    }

    private void champReponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champReponseActionPerformed
        // TODO add your handling code here:
        actionChampReponse(champReponse, 0);
        try {
            actionOrdreSuivantModifie(comboListeOrdreSuivant,0);
        }
        catch (Exception e) {}


    }//GEN-LAST:event_champReponseActionPerformed

    private void champReponse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champReponse2ActionPerformed
        // TODO add your handling code here:
        actionChampReponse(champReponse2, 1);
        try {
            actionOrdreSuivantModifie(comboListeOrdreSuivant2,1);
        }
        catch (Exception e) {}
    }//GEN-LAST:event_champReponse2ActionPerformed

    private void boutonReponsesSuivanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonReponsesSuivanteActionPerformed
        // TODO add your handling code here:
        blocage =1;
        OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());
        try {
            if (!ordre.getReponse()[4 * (pagedereponse + 1) - 1].isEmpty() && (pagedereponse + 1) < 10) {
                comboListesOrdreSuivantInitSelect();
                champReponse2.setEnabled(false);
                champReponse3.setEnabled(false);
                champReponse4.setEnabled(false);
                comboListeOrdreSuivant2.setEnabled(false);
                comboListeOrdreSuivant3.setEnabled(false);
                comboListeOrdreSuivant4.setEnabled(false);
                champReponse.setText(null);
                champReponse2.setText(null);
                champReponse3.setText(null);
                champReponse4.setText(null);
                pagedereponse++;
                labelNumeroPage.setText("Page " + (pagedereponse + 1) + "/10");

                try {
                    champReponse.setText(ordre.getReponse()[4 * (pagedereponse)]);
                    comboListeOrdreSuivant.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse)].getNom());
                    champReponse2.setEnabled(true);
                    comboListeOrdreSuivant2.setEnabled(true);
                    champReponse2.setText(ordre.getReponse()[4 * (pagedereponse) + 1]);
                    comboListeOrdreSuivant2.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse) +1].getNom());
                    champReponse3.setEnabled(true);
                    comboListeOrdreSuivant3.setEnabled(true);
                    champReponse3.setText(ordre.getReponse()[4 * (pagedereponse) + 2]);
                    comboListeOrdreSuivant3.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse) +2].getNom());
                    champReponse4.setEnabled(true);
                    comboListeOrdreSuivant4.setEnabled(true);
                    champReponse4.setText(ordre.getReponse()[4 * (pagedereponse) + 3]);
                    comboListeOrdreSuivant4.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse) +3].getNom());
                } catch (Exception e) {
                }
            }
        } catch (Exception e) {
        }
        blocage =0;

    }//GEN-LAST:event_boutonReponsesSuivanteActionPerformed

    private void boutonReponsesPrecedenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonReponsesPrecedenteActionPerformed
        // TODO add your handling code here:
        blocage =1;
        OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt(ListeOrdres.getSelectedIndex());
        if (pagedereponse > 0) {
            pagedereponse--;
            labelNumeroPage.setText("Page " + (pagedereponse + 1) + "/10");
            champReponsesEtOrdreSuivantSetEnable (true);
            champReponse.setText(ordre.getReponse()[4 * (pagedereponse)]);
            comboListeOrdreSuivant.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse)].getNom());
            champReponse2.setText(ordre.getReponse()[4 * (pagedereponse) + 1]);
            comboListeOrdreSuivant2.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse)+1].getNom());
            champReponse3.setText(ordre.getReponse()[4 * (pagedereponse) + 2]);
            comboListeOrdreSuivant3.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse)+2].getNom());
            champReponse4.setText(ordre.getReponse()[4 * (pagedereponse) + 3]);
            comboListeOrdreSuivant4.setSelectedItem(ordre.getOrdreSuivant()[4 * (pagedereponse)+3].getNom());
        }
        blocage =0;
    }//GEN-LAST:event_boutonReponsesPrecedenteActionPerformed

    private void champReponse3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champReponse3ActionPerformed
        // TODO add your handling code here:
        actionChampReponse(champReponse3, 2);
        try {
            actionOrdreSuivantModifie(comboListeOrdreSuivant3,2);
        }
        catch (Exception e) {}
    }//GEN-LAST:event_champReponse3ActionPerformed

    private void champReponse4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champReponse4ActionPerformed
        // TODO add your handling code here:
        actionChampReponse(champReponse4, 3);
        try {
            actionOrdreSuivantModifie(comboListeOrdreSuivant4,3);
        }
        catch (Exception e) {}
    }//GEN-LAST:event_champReponse4ActionPerformed
    private void actionOrdreSuivantModifie(JComboBox listeOrdreSuivant, int numeroReponse)
    {
        OrdreInterface ordre = (OrdreInterface) listeOrdreInterface.getElementAt( ListeOrdres.getSelectedIndex() ) ;
        OrdreInterface ordresuivant = (OrdreInterface) listeOrdreInterface.getElementAt(listeOrdreSuivant.getSelectedIndex());
        OrdreInterface[] lesOrdresSuivants = ordre.getOrdreSuivant();
        lesOrdresSuivants[numeroReponse + 4 * pagedereponse] = ordresuivant;
    }

    private void comboListeOrdreSuivantItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboListeOrdreSuivantItemStateChanged
        // TODO add your handling code here:
        if (blocage == 0)
        try {
            actionChampReponse(champReponse, 0);
            actionOrdreSuivantModifie(comboListeOrdreSuivant,0);
        }
        catch (Exception e) {}
    }//GEN-LAST:event_comboListeOrdreSuivantItemStateChanged

    private void comboListeOrdreSuivant2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboListeOrdreSuivant2ItemStateChanged
        // TODO add your handling code here:
        if (blocage == 0)
        try {
            actionChampReponse(champReponse2, 1);
            actionOrdreSuivantModifie(comboListeOrdreSuivant2,1);
        }
        catch (Exception e) {}
    }//GEN-LAST:event_comboListeOrdreSuivant2ItemStateChanged

    private void comboListeOrdreSuivant3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboListeOrdreSuivant3ItemStateChanged
        // TODO add your handling code here:
        if (blocage == 0)
        try {
            actionChampReponse(champReponse3, 2);
            actionOrdreSuivantModifie(comboListeOrdreSuivant3,2);
        }
        catch (Exception e) {}
    }//GEN-LAST:event_comboListeOrdreSuivant3ItemStateChanged

    private void comboListeOrdreSuivant4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboListeOrdreSuivant4ItemStateChanged
        // TODO add your handling code here:
        if (blocage == 0)
        try {
            actionChampReponse(champReponse4, 3);
            actionOrdreSuivantModifie(comboListeOrdreSuivant4,3);
        }
        catch (Exception e) {}
    }//GEN-LAST:event_comboListeOrdreSuivant4ItemStateChanged

    private void comboListeOrdreSuivantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboListeOrdreSuivantActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_comboListeOrdreSuivantActionPerformed

    private void BoutonTestVocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonTestVocalActionPerformed
    testVocal.setTexte(champTexteOrdre.getText());
    testVocal.playAll();
    }//GEN-LAST:event_BoutonTestVocalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonTestVocal;
    private javax.swing.JButton BoutonValiderMission;
    private javax.swing.JList ListeOrdres;
    private javax.swing.JButton boutonAfficherMissionComplete;
    private javax.swing.JButton boutonAjouterNouvelOrdre;
    private javax.swing.JButton boutonReponsesPrecedente;
    private javax.swing.JButton boutonReponsesSuivante;
    private javax.swing.JButton boutonRetirerOrdre;
    private javax.swing.JTextField champNomNouvelleMission;
    private javax.swing.JTextField champReponse;
    private javax.swing.JTextField champReponse2;
    private javax.swing.JTextField champReponse3;
    private javax.swing.JTextField champReponse4;
    private javax.swing.JTextField champTexteOrdre;
    private javax.swing.JComboBox comboListeOrdreSuivant;
    private javax.swing.JComboBox comboListeOrdreSuivant2;
    private javax.swing.JComboBox comboListeOrdreSuivant3;
    private javax.swing.JComboBox comboListeOrdreSuivant4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelListeOrdres;
    private javax.swing.JLabel labelNomNouvelleMission;
    private javax.swing.JLabel labelNumeroPage;
    private javax.swing.JLabel labelReponse;
    private javax.swing.JLabel labelTexteOrdre;
    private javax.swing.JLabel messageEntrerNomMission;
    // End of variables declaration//GEN-END:variables

    public void AjouterEmployeBDD(String login, char[] motDePasse) {
        throw new UnsupportedOperationException("Not supported yet.");

    }

    public void RetirerEmployeBDD(String login) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void AjouterMissionBDD() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void RetirerMissionBDD() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
